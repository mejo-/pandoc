name: Cypress

on:
  pull_request:
    paths:
      - '.github/workflows/**'
      - 'appinfo/**'
      - 'cypress/**'
      - 'l10n/**'
      - 'lib/**'
      - 'src/**'
      - 'skeleton/**'
      - 'templates/**'
      - '.php-cs-fixer.dist.php'
      - 'babel.config.js'
      - 'composer.json'
      - 'composer.lock'
      - 'cypress.json'
      - 'package.json'
      - 'package-lock.json'

  push:
    branches:
      - main
      - master
      - stable*

permissions:
  contents: read

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  APP_NAME: pandoc
  CYPRESS_baseUrl: http://localhost:8081/index.php

jobs:
  cypress:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [16]
        php-versions: ['8.0']
        databases: ['sqlite']
        server-versions: ['stable25', 'master']

    steps:
      - name: Set app env
        run: |
          # Split and keep last
          echo "APP_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Install Pandoc
        run: sudo apt-get install -y pandoc

      - name: Checkout server
        uses: actions/checkout@v3
        with:
          submodules: true
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout app
        uses: actions/checkout@v3
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, iconv, fileinfo, intl, sqlite, pdo_sqlite, gd
          coverage: none

      - name: Install composer dependencies
        working-directory: apps/${{ env.APP_NAME }}
        run: composer i --no-dev

      - name: Read package.json node and npm engines version
        uses: skjnldsv/read-package-engines-version-actions@v1.2
        id: versions
        with:
          path: apps/${{ env.APP_NAME }}
          fallbackNode: '^16'
          fallbackNpm: '^8'

      - name: Set up node ${{ steps.versions.outputs.nodeVersion }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.versions.outputs.nodeVersion }}

      - name: Set up npm ${{ steps.versions.outputs.npmVersion }}
        run: npm i -g npm@"${{ steps.versions.outputs.npmVersion }}"

      - name: Setup NPM cache
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: apps/${{ env.APP_NAME }}/package-lock.json
          # cypress will install dependencies

      - name: Install dependencies & build
        working-directory: apps/${{ env.APP_NAME }}
        run: |
          npm ci
          npm run build --if-present

      - name: Set up Nextcloud
        env:
          DB_PORT: 4444
        run: |
          mkdir data
          ./occ maintenance:install --verbose --database=sqlite --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass admin
          ./occ app:enable --force ${{ env.APP_NAME }}

      - name: Run Nextcloud
        run: php -S 0.0.0.0:8081 &

      - name: Run Cypress
        uses: cypress-io/github-action@v4
        with:
          wait-on: '${{ env.CYPRESS_baseUrl }}'
          working-directory: apps/${{ env.APP_NAME }}
          config: video=false,defaultCommandTimeout=20000
        env:
          # https://github.com/cypress-io/github-action/issues/124
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}
          COMMIT_INFO_SHA:  ${{ github.event.pull_request.head.sha }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: Upload test failure screenshots
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Upload screenshots
          path: apps/${{ env.APP_NAME }}/cypress/screenshots/
          retention-days: 5

      - name: Upload nextcloud logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Upload nextcloud log
          path: data/nextcloud.log
          retention-days: 5

  summary:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: cypress

    if: always()

    name: cypress-summary

    steps:
      - name: Summary status
        run: if ${{ needs.cypress.result != 'success' }}; then exit 1; fi
